#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.19
#  in conjunction with Tcl version 8.6
#    Dec 20, 2018 11:03:14 PM CST  platform: Windows NT

#模块导入区域
import sys


import MainScript
try:
    import Tkinter as tk
    from Tkinter import messagebox
except ImportError:
    from tkinter import messagebox
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import main_support

#自写函数区域

def start(top):#传参为实例TOP
    e=[]
    e.append(top.Entry1.get())
    e.append(top.Entry2.get())
    e.append(top.Entry3.get())
    e.append(top.v.get())
    port1=6500
    port2=5000
    ID=200
    try:
        ID=int(e[0])
        port1 = int(e[2][:5])
        port2 = int(e[2][5:])
        if(ID==None or port1==None or port2==None):
            r = tk.messagebox.showinfo("你啥意思？", "不把信息填完还想执行命令？")
    except:
        r=tk.messagebox.showwarning("警告","参数有误！\n高级设置默认参数请填写 0650005000\n请确保机位号为有效整数")
        return
    ID="192.168.1."+str(ID)
    print("DebugInfo:Port[{0}] [{1}] IP[{2}] text[{3}] RadioButton[{4}]".format(port1,port2,ID,e[1],e[3]))
    if(int(e[3])==1):
        try:
            MainScript.broad(ID,port1,1)
        except:
            r = tk.messagebox.showwarning("警告","失败，请重新执行命令并检查参数！\n请确保教师机处于活动状态！")
            return
    elif(int(e[3])==2):
        try:
            MainScript.broad(ID,port1,0)
        except:
            r = tk.messagebox.showwarning("警告", "失败，请重新执行命令并检查参数！\n请确保教师机处于活动状态！")
            return
    elif(int(e[3])==3):
        try:
            MainScript.textsend(ID,port2,e[1])
        except:
            r = tk.messagebox.showwarning("警告", "失败，请重新执行命令并检查参数！\n请确保教师机处于活动状态！")
            return



def about(self):#传参默认self，否则报错
    r = tk.messagebox.showwarning('关于', '本程序仅供对计算机网络实践使用\n请勿使用于其他目的！若应用与干扰教学秩序、考试作弊等后果自行承担，作者概不负责\nBug请联系QQ：1029550448\n版本：V1.01')

#自动生成函数区域
def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root,top
    root = tk.Tk()
    root.iconbitmap('ico.ico')
    top = Toplevel1(root)
    main_support.init(root, top)

    top.Button2.bind('<Button-1>', about)
    top.Button1.bind("<Button-1>",  (lambda x:start(top)))
    root.mainloop()



w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    main_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None
#自动生成类
class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#ececec' # Closest X11 color: 'gray92' 
        font9 = "-family {Microsoft YaHei UI} -size 9 -weight normal "  \
            "-slant roman -underline 0 -overstrike 0"

        top.geometry("444x149+442+259")
        top.title("机房控制系统 V1.01")
        top.configure(background="#b0fffc")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.Button1 = tk.Button(top)
        self.Button1.place(relx=0.833, rely=0.134, height=28, width=59)
        self.Button1.configure(activebackground="#ececec")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#ffffff")
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''执行命令''')

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(relx=0.586, rely=0.134, relheight=0.705
                , relwidth=0.214)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(background="#ffffff")
        self.Frame1.configure(highlightbackground="#d9d9d9")
        self.Frame1.configure(highlightcolor="black")
        self.Frame1.configure(width=95)

        self.v = tk.StringVar()

        self.Radiobutton1 = tk.Radiobutton(self.Frame1)
        self.Radiobutton1.place(relx=0.105, rely=0.095, relheight=0.257
                , relwidth=0.8)
        self.Radiobutton1.configure(activebackground="#ffffff")
        self.Radiobutton1.configure(activeforeground="#ffffff")
        self.Radiobutton1.configure(background="#ffffff")
        self.Radiobutton1.configure(disabledforeground="#a3a3a3")
        self.Radiobutton1.configure(foreground="#000000")
        self.Radiobutton1.configure(highlightbackground="#d9d9d9")
        self.Radiobutton1.configure(highlightcolor="black")
        self.Radiobutton1.configure(justify='left')
        self.Radiobutton1.configure(text='''锁定屏幕''')
        self.Radiobutton1.configure(variable=self.v)
        self.Radiobutton1.configure(value='1')

        self.Radiobutton2 = tk.Radiobutton(self.Frame1)
        self.Radiobutton2.place(relx=0.105, rely=0.381, relheight=0.257
                , relwidth=0.8)
        self.Radiobutton2.configure(activebackground="#ececec")
        self.Radiobutton2.configure(activeforeground="#000000")
        self.Radiobutton2.configure(background="#ffffff")
        self.Radiobutton2.configure(disabledforeground="#a3a3a3")
        self.Radiobutton2.configure(foreground="#000000")
        self.Radiobutton2.configure(highlightbackground="#d9d9d9")
        self.Radiobutton2.configure(highlightcolor="black")
        self.Radiobutton2.configure(justify='left')
        self.Radiobutton2.configure(text='''解锁屏幕''')
        self.Radiobutton2.configure(variable=self.v)
        self.Radiobutton2.configure(value='2')
        self.Radiobutton2.configure(command=self.v)
        self.Radiobutton3 = tk.Radiobutton(self.Frame1)
        self.Radiobutton3.place(relx=0.105, rely=0.667, relheight=0.257
                , relwidth=0.8)
        self.Radiobutton3.configure(activebackground="#ececec")
        self.Radiobutton3.configure(activeforeground="#000000")
        self.Radiobutton3.configure(background="#ffffff")
        self.Radiobutton3.configure(disabledforeground="#a3a3a3")
        self.Radiobutton3.configure(foreground="#000000")
        self.Radiobutton3.configure(highlightbackground="#d9d9d9")
        self.Radiobutton3.configure(highlightcolor="black")
        self.Radiobutton3.configure(justify='left')
        self.Radiobutton3.configure(text='''发送消息''')
        self.Radiobutton3.configure(variable=self.v)
        self.Radiobutton3.configure(value='3')
        self.v.set('1')
        sheet_text1 = tk.StringVar()
        self.Entry1 = tk.Entry(top, textvariable=sheet_text1)
        sheet_text1.set("200")
        self.Entry1.place(relx=0.248, rely=0.134,height=17, relwidth=0.077)
        self.Entry1.configure(background="white")
        self.Entry1.configure(disabledforeground="#a3a3a3")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(foreground="#000000")
        self.Entry1.configure(highlightbackground="#d9d9d9")
        self.Entry1.configure(highlightcolor="black")
        self.Entry1.configure(insertbackground="black")
        self.Entry1.configure(selectbackground="#c4c4c4")
        self.Entry1.configure(selectforeground="black")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.045, rely=0.134, height=21, width=76)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#ffffff")
        self.Label1.configure(borderwidth="1")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font=font9)
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''目标机位号：''')

        sheet_text2 = tk.StringVar()
        self.Entry2 = tk.Entry(top, textvariable=sheet_text2)
        sheet_text2.set("Hello")
        self.Entry2.place(relx=0.045, rely=0.537,height=17, relwidth=0.505)
        self.Entry2.configure(background="white")
        self.Entry2.configure(disabledforeground="#a3a3a3")
        self.Entry2.configure(font="TkFixedFont")
        self.Entry2.configure(foreground="#000000")
        self.Entry2.configure(highlightbackground="#d9d9d9")
        self.Entry2.configure(highlightcolor="black")
        self.Entry2.configure(insertbackground="black")
        self.Entry2.configure(selectbackground="#c4c4c4")
        self.Entry2.configure(selectforeground="black")

        self.Button2 = tk.Button(top)
        self.Button2.place(relx=0.833, rely=0.604, height=28, width=59)
        self.Button2.configure(activebackground="#ececec")
        self.Button2.configure(activeforeground="#000000")
        self.Button2.configure(background="#ffffff")
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(foreground="#000000")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        self.Button2.configure(pady="0")
        self.Button2.configure(text='''关  于''')


        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.045, rely=0.336, height=23, width=169)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#ffffff")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''发送文本编辑区(仅支持英文)：''')

        self.Label3 = tk.Label(top)
        self.Label3.place(relx=0.045, rely=0.738, height=23, width=54)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''高级选项''')

        sheet_text3 = tk.StringVar()
        self.Entry3 = tk.Entry(top,textvariable = sheet_text3)
        sheet_text3.set("0650005000")
        self.Entry3.place(relx=0.203, rely=0.738,height=17, relwidth=0.212)
        self.Entry3.configure(background="white")
        self.Entry3.configure(disabledforeground="#a3a3a3")
        self.Entry3.configure(font="TkFixedFont")
        self.Entry3.configure(foreground="#000000")
        self.Entry3.configure(highlightbackground="#d9d9d9")
        self.Entry3.configure(highlightcolor="black")
        self.Entry3.configure(insertbackground="black")
        self.Entry3.configure(selectbackground="#c4c4c4")
        self.Entry3.configure(selectforeground="black")



    @staticmethod
    def popup1(event, *args, **kwargs):
        Popupmenu1 = tk.Menu(root, tearoff=0)
        Popupmenu1.configure(activebackground="#f9f9f9")
        Popupmenu1.configure(activeborderwidth="1")
        Popupmenu1.configure(activeforeground="black")
        Popupmenu1.configure(background="#d9d9d9")
        Popupmenu1.configure(borderwidth="1")
        Popupmenu1.configure(disabledforeground="#a3a3a3")
        Popupmenu1.configure(font="{Microsoft YaHei UI} 9")
        Popupmenu1.configure(foreground="black")
        Popupmenu1.post(event.x_root, event.y_root)

#主函数
vp_start_gui()






